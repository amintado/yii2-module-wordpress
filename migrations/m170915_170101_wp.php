<?php
/**
 * Created by PhpStorm.
 * User: amin__000
 * Date: 9/16/2017
 * Time: 12:07 AM
 */

namespace amintado\wordpress\migrations;


use yii\db\Migration;

class m170915_170101_wp extends Migration
{
    public $WriteSampleData=true;
    public function safeDown()
    {
        parent::safeDown(); // TODO: Change the autogenerated stub
    }

    public function safeUp()
    {
        $tableOptions = null;
        if ($this->db->driverName === 'mysql') {
            $tableOptions = 'CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE=InnoDB';
        }
        //---------------- WordPress CMS PreSetup -------------------
        $this->createTable('wp_commentmeta', [
            'meta_id' => $this->bigPrimaryKey(),
            'comment_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'meta_key' => $this->string(255),
            'meta_value' => $this->text(),
        ], $tableOptions);
        $this->createTable('wp_comments', [
            'comment_ID' => $this->bigPrimaryKey(),
            'comment_post_ID' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'comment_author' => $this->text()->notNull(),
            'comment_author_email' => $this->string(100)->notNull()->defaultValue(''),
            'comment_author_url' => $this->string(200)->notNull()->defaultValue(''),
            'comment_author_IP' => $this->string(100)->notNull()->defaultValue(''),
            'comment_date' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'comment_date_gmt' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'comment_content' => $this->text()->notNull(),
            'comment_karma' => $this->integer(11)->notNull()->defaultValue(0),
            'comment_approved' => $this->string(20)->notNull()->defaultValue('1'),
            'comment_agent' => $this->string(255)->notNull()->defaultValue(''),
            'comment_type' => $this->string(20)->notNull()->defaultValue(''),
            'comment_parent' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'user_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
        ], $tableOptions);
        $this->createTable('wp_links', [
            'link_id' => $this->bigPrimaryKey(),
            'link_url' => $this->string(255)->notNull()->defaultValue(''),
            'link_name' => $this->string(255)->notNull()->defaultValue(''),
            'link_image' => $this->string(255)->notNull()->defaultValue(''),
            'link_target' => $this->string(25)->notNull()->defaultValue(''),
            'link_description' => $this->string(255)->notNull()->defaultValue(''),
            'link_visible' => $this->string(20)->notNull()->defaultValue('Y'),
            'link_owner' => $this->bigInteger(20)->notNull()->defaultValue('1'),
            'link_rating' => $this->integer(11)->notNull()->defaultValue(0),
            'link_updated' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'link_rel' => $this->string(255)->notNull()->defaultValue(''),
            'link_notes' => $this->text()->notNull(),
            'link_rss' => $this->string(255)->notNull()->defaultValue(''),
        ], $tableOptions);
        $this->createTable('wp_options', [
            'option_id' => $this->bigPrimaryKey(),
            'option_name' => $this->string(191)->notNull()->defaultValue(''),
            'option_value' => $this->text()->notNull(),
            'autoload' => $this->string(20)->notNull()->defaultValue('yes'),
        ], $tableOptions);
        $this->createTable('wp_postmeta', [
            'meta_id' => $this->bigPrimaryKey(),
            'post_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'meta_key' => $this->string(255),
            'meta_value' => $this->text(),
        ], $tableOptions);
        $this->createTable('wp_posts', [
            'ID' => $this->bigPrimaryKey(),
            'post_author' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'post_date' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'post_date_gmt' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'post_content' => $this->text()->notNull(),
            'post_title' => $this->text()->notNull(),
            'post_excerpt' => $this->text()->notNull(),
            'post_status' => $this->string(20)->notNull()->defaultValue('publish'),
            'comment_status' => $this->string(20)->notNull()->defaultValue('open'),
            'ping_status' => $this->string(20)->notNull()->defaultValue('open'),
            'post_password' => $this->string(255)->notNull()->defaultValue(''),
            'post_name' => $this->string(200)->notNull()->defaultValue(''),
            'to_ping' => $this->text()->notNull(),
            'pinged' => $this->text()->notNull(),
            'post_modified' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'post_modified_gmt' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'post_content_filtered' => $this->text()->notNull(),
            'post_parent' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'guid' => $this->string(255)->notNull()->defaultValue(''),
            'menu_order' => $this->integer(11)->notNull()->defaultValue(0),
            'post_type' => $this->string(20)->notNull()->defaultValue('post'),
            'post_mime_type' => $this->string(100)->notNull()->defaultValue(''),
            'comment_count' => $this->bigInteger(20)->notNull()->defaultValue('0'),
        ], $tableOptions);
        $this->createTable('wp_term_relationships', [
            'object_id' => $this->bigInteger(20)->notNull(),
            'term_taxonomy_id' => $this->bigInteger(20)->notNull(),
            'term_order' => $this->integer(11)->notNull()->defaultValue(0),
            'PRIMARY KEY ([[object_id]], [[term_taxonomy_id]])',
        ], $tableOptions);
        $this->createTable('wp_term_taxonomy', [
            'term_taxonomy_id' => $this->bigPrimaryKey(),
            'term_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'taxonomy' => $this->string(32)->notNull()->defaultValue(''),
            'description' => $this->text()->notNull(),
            'parent' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'count' => $this->bigInteger(20)->notNull()->defaultValue('0'),
        ], $tableOptions);
        $this->createTable('wp_termmeta', [
            'meta_id' => $this->bigPrimaryKey(),
            'term_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'meta_key' => $this->string(255),
            'meta_value' => $this->text(),
        ], $tableOptions);
        $this->createTable('wp_terms', [
            'term_id' => $this->bigPrimaryKey(),
            'name' => $this->string(200)->notNull()->defaultValue(''),
            'slug' => $this->string(200)->notNull()->defaultValue(''),
            'term_group' => $this->bigInteger(10)->notNull()->defaultValue('0'),
        ], $tableOptions);
        $this->createTable('wp_usermeta', [
            'umeta_id' => $this->bigPrimaryKey(),
            'user_id' => $this->bigInteger(20)->notNull()->defaultValue('0'),
            'meta_key' => $this->string(255),
            'meta_value' => $this->text(),
        ], $tableOptions);
        $this->createTable('wp_users', [
            'ID' => $this->bigPrimaryKey(),
            'user_login' => $this->string(60)->notNull()->defaultValue(''),
            'user_pass' => $this->string(255)->notNull()->defaultValue(''),
            'user_nicename' => $this->string(50)->notNull()->defaultValue(''),
            'user_email' => $this->string(100)->notNull()->defaultValue(''),
            'user_url' => $this->string(100)->notNull()->defaultValue(''),
            'user_registered' => $this->datetime()->notNull()->defaultValue('0000-00-00 00:00:00'),
            'user_activation_key' => $this->string(255)->notNull()->defaultValue(''),
            'user_status' => $this->integer(11)->notNull()->defaultValue(0),
            'display_name' => $this->string(250)->notNull()->defaultValue(''),
        ], $tableOptions);

        if ($this->WriteSampleData){
            $this->WriteSampleData();
        }
    }

    public function WriteSampleData(){

        $this->insert('wp_users',
            [
                'user_login'=>'admin',

            ]
            );
        $this->insert('wp_comments',
            [
                'comment_post_ID'=>1,
                'comment_author'=>'amintado',
                'comment_author_email'=>'amintado@gmail.com',
                'comment_author_url'=>'http://shahrmap.ir',
                'comment_author_IP'=>' ',
                'comment_date'=>date(),
                'comment_date_gmt'=>date(),
                'comment_content'=> Yii::t('atwp', 'comment text'),
                'comment_karma'=>0,
                'comment_approved'=>1,
                'comment_agent'=>' ',
                'comment_type'=>' ',
                'comment_parent'=>0,
                'user_id'=>0
            ]
            );
    }
}